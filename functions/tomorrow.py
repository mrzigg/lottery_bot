from aiogram import types
import asyncio

import os
import sys
import inspect

currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
parentdir = os.path.dirname(currentdir)
sys.path.insert(0, parentdir)

import database.users_db as db
import database.tickets_db as ticket_db
import database.raffle_progresses_db as progres_db

from config.bot_name import link
from config.load_all import bot, dp 
from filters.time_filter import TimeFilter
from functions.message_routins import Routins
from menu.inline.take_prize import taking_board_3


async def invite_message_tomorrow(user_id, invites):
    await ticket_db.add_tickets(user_id, invites+2)
    tickets = await ticket_db.get_tickets(user_id)
    super_game_invites = await progres_db.get_function(user_id, "super_game_invites") + 1
    await progres_db.update_function(user_id, "super_game_invites", super_game_invites)
    if super_game_invites < 5:
        return await bot.send_message(user_id, f"<b>–ë–æ–Ω—É—Å –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ!</b>\n\n+1 –¥—Ä—É–≥ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ ü•≥\n–ó–∞ —ç—Ç–æ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å <b>{invites+2}</b> üé´\n–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –∏—Ö <b>{tickets}</b>\n\n<b> –î–æ —É–º–Ω–æ–∂–µ–Ω–∏—è –±–∏–ª–µ—Ç–æ–≤ –≤ –•2 –æ—Å—Ç–∞–ª–æ—Å—å –≤—Å–µ–≥–æ {5-super_game_invites} –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è </b>\n\n–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:\n{link}{user_id}", disable_web_page_preview=True) 
    else:
        await ticket_db.add_tickets(user_id, tickets*2)
        await progres_db.update_super_game(user_id, 0, 0)
        return await bot.send_message(user_id, f"<b>–í–æ—É, —ç—Ç–æ –∂–µ –•2!</b>\n\n–£ —Ç–µ–±—è –±—ã–ª–æ <b>{tickets}</b> üé´\n–°–µ–π—á–∞—Å —É —Ç–µ–±—è <b>{tickets*2}</b> üé´\n\n–≠—Ç–æ –±–æ–ª—å—à–µ —á–µ–º —É 92% —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞!\n<b>–•–æ—á–µ—à—å –µ—â—ë —É–≤–µ–ª–∏—á–∏—Ç—å —Å–≤–æ–∏ —à–∞–Ω—Å—ã –Ω–∞ –ø–æ–±–µ–¥—É? </b>\n\n–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:\n{link}{user_id}", disable_web_page_preview=True)
       

async def sending_message_tomorrow():
    users = await db.all_users()
    for row in users:
        days = await progres_db.get_function(int(row[0]), "daily_bonus_duration")
        await bot.send_message(int(row[0]), f"<b>–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å üéÅ</b>\n\n–¢–µ–±–µ –Ω–∞—á–∏—Å–ª–µ–Ω–æ <b>{days*5}</b> –ª–æ—Ç–µ—Ä–µ–π–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤.\n\n‚úÖ –ó–∞–±–∏—Ä–∞–π –±–æ–Ω—É—Å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏ –æ–Ω –±—É–¥–µ—Ç —Ä–∞—Å—Ç–∏ –Ω–∞ <b>+5</b> –ª–æ—Ç–µ—Ä–µ–π–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ)\n\n‚è∞ –ë–æ–Ω—É—Å –∞–∫—Ç–∏–≤–µ–Ω –¥–æ 24:00",
        reply_markup=taking_board_3)


@dp.callback_query_handler(TimeFilter(), text="taking_part_tomorrow")
async def taking_bonus_callback(call: types.CallbackQuery):
    await Routins.edit_callback(call=call)
    info = await progres_db.get_row_function(call.from_user.id, "daily_bonus_duration, super_game_duration")
    days, duration = info[0], (info[1] + 1)
    await ticket_db.add_tickets(call.from_user.id, days*5)
    tickets = await ticket_db.get_tickets(call.from_user.id)
    text = f"<b> –ë–æ–Ω—É—Å –ø–æ–ª—É—á–µ–Ω!</b>\n\n–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è <b>{tickets}</b> –ª–æ—Ç–µ—Ä–µ–π–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤.\n\n–ß—Ç–æ–±—ã —Ä–∞–∑–º–µ—Ä –±–æ–Ω—É—Å–∞ —É–≤–µ–ª–∏—á–∏–≤–∞–ª—Å—è - –∑–∞–±–∏—Ä–∞–π –µ–≥–æ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å."
    await Routins.edit_call_text(callback_query=call, text=text)
    await asyncio.sleep(3)
    await bot.send_message(call.from_user.id, f"<b>–ó–∞–≤—Ç—Ä–∞ —Å—Ç–∞–Ω–µ—Ç —è—Å–Ω–æ –∫—Ç–æ –∂–µ –æ–∫–∞–∂–µ—Ç—Å—è  –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º.</b>\n\n–ê —Å–µ–≥–æ–¥–Ω—è —Ç—ã —Å–º–æ–∂–µ—à—å —É–º–Ω–æ–∂–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤–æ–∏—Ö –ª–æ—Ç–µ—Ä–µ–π–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤ –≤ 2 —Ä–∞–∑–∞.\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–º–Ω–æ–∂–∏—Ç—å —Å–≤–æ–∏ —à–∞–Ω—Å—ã –Ω–∞ –ø–æ–±–µ–¥—É –≤ 2 —Ä–∞–∑–∞ –∏ –ø–æ–ª—É—á–∏—Ç—å <b>{tickets}</b> –ª–æ—Ç–µ—Ä–µ–π–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤\n\n–ü—Ä–∏–≥–ª–∞—Å–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à 5 –¥—Ä—É–∑–µ–π.\n\n–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:\n{link}{call.from_user.id}", disable_web_page_preview=True)
    await progres_db.update_function(call.from_user.id, "super_game_stage", 6)
    await progres_db.update_function(call.from_user.id, "super_game_duration", duration)