from datetime import datetime, timedelta
from aiogram import types
import asyncio

import os
import sys
import inspect

currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
parentdir = os.path.dirname(currentdir)
sys.path.insert(0, parentdir)

import database.users_db as db
import database.lottery_db as lot_db

from variables import end_timestamp
from functions.check import Checking
from filters.during_sub import DuringSub2
from functions.message_routins import Routins
from functions.make_links import Channel_link
from functions.lottery_routin import LotRoutin
from config.load_all import dp, bot, scheduler
from menu.inline.check_follow_board import *
from functions.make_tickets import MakeTickets
from menu.inline.gender_board import gender_board

func = MakeTickets()
check = Checking()
channel_link = Channel_link()
lotrout = LotRoutin()


@dp.callback_query_handler(text="i_am_in")
async def in_call_back(call: types.CallbackQuery): 
    await db.update_button(call.from_user.id, True)
    channel_link.make_links()
    await bot.send_message(call.from_user.id, f"–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ <b>–ø–æ–¥–ø–∏—à–∏—Å—å</b> –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã:\n\n{channel_link.links}\n\n–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ —Ç—ã –ø–æ–¥–ø–∏—à–µ—à—å—Å—è -<b> –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É</b> ‚Äú–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É‚Äù\n\nüîé –†–æ–±–æ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç –ø–æ–¥–ø–∏—Å–∫—É –∏ –≤—ã–¥–∞—Å—Ç –ª–æ—Ç–µ—Ä–µ–π–Ω—ã–π –±–∏–ª–µ—Ç.",
    reply_markup=Subscription_Menu_2)
    await Routins.edit_callback(call=call)
    lottery = await lot_db.lottery_exists()
    lotrout.lottery_message(lottery=lottery)
    if (datetime.now() + timedelta(minutes=30)) < end_timestamp:
        scheduler.add_job(check.thirty_minutes, "date", run_date=(datetime.now() + timedelta(minutes=30)), args=(call.from_user.id,))
    if (datetime.now() + timedelta(hours=2)) < end_timestamp:    
        scheduler.add_job(check.two_hours, "date", run_date=(datetime.now() + timedelta(hours=2)), args=(call.from_user.id,))
            
    scheduler.add_job(check.three_days, "date", run_date=(end_timestamp - timedelta(days=3)), args=(call.from_user.id, lotrout.main_prize,))
    scheduler.add_job(check.today, "date", run_date=(end_timestamp - timedelta(hours=24)), args=(call.from_user.id, str(lottery[3]),))


@dp.callback_query_handler(text="lets_fix")
async def Lets_fix(call: types.CallbackQuery):
    channel_link.make_links()
    await bot.send_message(call.from_user.id, f'–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ <b>–ø–æ–¥–ø–∏—à–∏—Å—å</b> –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª:\n{channel_link.links}\n\n–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ —Ç—ã –ø–æ–¥–ø–∏—à–µ—à—å—Å—è - <b> –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É</b> ‚Äú–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É‚Äù\n\nüîé –†–æ–±–æ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç –ø–æ–¥–ø–∏—Å–∫—É –∏ –≤—ã–¥–∞—Å—Ç –ª–æ—Ç–µ—Ä–µ–π–Ω—ã–π –±–∏–ª–µ—Ç.', reply_markup=Subscription_Menu_2)
    await Routins.edit_callback(call=call)


@dp.callback_query_handler(text="participation")
async def Participation(call: types.CallbackQuery):
    channel_link.make_links()
    await bot.send_message(call.from_user.id, f'–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ <b>–ø–æ–¥–ø–∏—à–∏—Å—å</b> –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª:\n{channel_link.links}\n\n–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ —Ç—ã –ø–æ–¥–ø–∏—à–µ—à—å—Å—è - <b> –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É</b> ‚Äú–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É‚Äù\n\nüîé –†–æ–±–æ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç –ø–æ–¥–ø–∏—Å–∫—É –∏ –≤—ã–¥–∞—Å—Ç –ª–æ—Ç–µ—Ä–µ–π–Ω—ã–π –±–∏–ª–µ—Ç.', reply_markup=Subscription_Menu)
    await Routins.edit_callback(call=call)


@dp.callback_query_handler(DuringSub2(), text="check_subscription")
async def Check_subscription(call: types.CallbackQuery):
    await db.update_button_2(call.from_user.id)
    await func.make_ten_tickets(call.from_user.id)
    await bot.send_message(call.message.chat.id, f"<b>–†–æ–±–æ—Ç –≤—Å—ë –ø—Ä–æ–≤–µ—Ä–∏–ª - –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ)</b>\n\n–¢–µ–ø–µ—Ä—å —Ç—ã —É—á–∞—Å—Ç–Ω–∏–∫ —Ä–æ–∑—ã–≥—Ä—ã—à–∞!\n\n–ö–∞–∫ –º—ã –∏ –æ–±–µ—â–∞–ª–∏ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –≤–º–µ—Å—Ç–æ 1 –ª–æ—Ç–µ—Ä–µ–π–Ω–æ–≥–æ –±–∏–ª–µ—Ç–∞ —Ü–µ–ª—ã—Ö 10 —à—Ç—É–∫)\n\nüé´ –ù–æ–º–µ—Ä–∞ —Ç–≤–æ–∏—Ö –ª–æ—Ç–µ—Ä–µ–π–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤:{func.id_list}")
    await asyncio.sleep(3)
    await bot.send_message(call.from_user.id, "–ö—Å—Ç–∞—Ç–∏, —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å <b>+1 –ª–æ—Ç–µ—Ä–µ–π–Ω—ã–π –±–∏–ª–µ—Ç!</b>\n\n<b>–ü—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å:</b> –¢—ã –ø–∞—Ä–µ–Ω—å –∏–ª–∏ –¥–µ–≤—É—à–∫–∞?\n\n<i>P.S.–¢–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –ø–æ–∑–≤–æ–ª—è—Ç –Ω–∞–º –ø–æ–Ω—è—Ç—å, –∫–∞–∫ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ —Å–¥–µ–ª–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à –µ—â–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ)</i>",
    reply_markup=gender_board)
    await Routins.edit_callback(call=call)