from datetime import datetime, timedelta
from aiogram import types

import os
import sys
import inspect

currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
parentdir = os.path.dirname(currentdir)
sys.path.insert(0, parentdir)

import database.raffle_progresses_db as progres_db

from config.bot_name import link
from filters.time_filter import TimeFilter
from functions.message_routins import Routins
from config.load_all import dp, bot, scheduler
from menu.inline.stage_1_board import extra_tickets_board
from functions.scheduler_second_stage import five_minutes, eight_minutes, eleven_minutes


@dp.callback_query_handler(TimeFilter(), text_contains="stage_1_")
async def taking_bonus_callback(call: types.CallbackQuery):
    await Routins.edit_callback(call=call)
    if call.data == "stage_1_no":
        return await bot.send_message(call.from_user.id, "<b>–≠—Ç–æ —Ä–∞–∑—É–º–Ω–æ</b> üòÄ\n–õ–æ—Ç–µ—Ä–µ–π–Ω—ã–µ –±–∏–ª–µ—Ç—ã –º–æ–∂–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –∏ –±–µ–∑ —Ä–∏—Å–∫–∞)", reply_markup=extra_tickets_board)
    elif call.data == "stage_1_extra":
        text = f"<b> –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ª–æ—Ç–µ—Ä–µ–π–Ω—ã–µ –±–∏–ª–µ—Ç—ã - –ø—Ä–∏–≥–ª–∞—Å–∏ —Å–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π –≤ —Ä–æ–∑—ã–≥—Ä—ã—à!</b>\n–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:\n{link}{call.from_user.id}"
        await Routins.edit_call_text(callback_query=call, text=text)
    else:
        await progres_db.update_function(call.from_user.id, "super_game_stage", 2)
        text = f"<b>–í–æ—Ç —ç—Ç–æ —É–∂–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!</b>\n–î–µ—Ä–∂–∏ —Å—Å—ã–ª–∫—É:\n{link}{call.from_user.id}\n–ü–∞—Ä–∏ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —Ä–æ–≤–Ω–æ —á–µ—Ä–µ–∑ <b>10 –º–∏–Ω—É—Ç.</b>"
        await Routins.edit_call_text(callback_query=call, text=text)
        scheduler.add_job(five_minutes, "date", run_date=(datetime.now()+timedelta(minutes=5)), args=(call.from_user.id,))
        scheduler.add_job(eight_minutes, "date", run_date=(datetime.now()+timedelta(minutes=8)), args=(call.from_user.id,))
        scheduler.add_job(eleven_minutes, "date", run_date=(datetime.now()+timedelta(minutes=11)), args=(call.from_user.id,))