from aiogram import types
from datetime import datetime, timedelta

import os
import sys
import inspect

currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
parentdir = os.path.dirname(currentdir)
sys.path.insert(0, parentdir)

from config.load_all import dp, bot, scheduler
import database.lottery_db as lot_db
import database.users_db as db
from menu.inline.play_board import play_board
from menu.inline.check_follow_board import Subscription_Menu_2


@dp.message_handler(text="–ù–∞—á–∞—Ç—åüî•")
async def start_play_message(message: types.Message):
    lottery = await lot_db.lottery_exists()
    if not lottery:
        return await bot.send_message(message.from_user.id, "<b>–†–æ–∑—ã–≥—Ä—ã—à —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω.</b>\n\n–ù–æ –º—ã —É–∂–µ –≥–æ—Ç–æ–≤—ã–º –∫ –∑–∞–ø—É—Å–∫—É –Ω–æ–≤—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à —Å –±–µ–∑—É–º–Ω–æ –∫—Ä—É—Ç—ã–º–∏ –ø—Ä–∏–∑–∞–º–∏!\n\n–ù—É–∂–Ω–æ —á—É—Ç—å-—á—É—Ç—å –ø–æ–¥–æ–∂–¥–∞—Ç—åüéÅ\n\n–°–æ–≤—Å–µ–º —á—É—Ç—å-—á—É—Ç—å‚ò∫Ô∏è",
        reply_markup=types.ReplyKeyboardRemove())
    else:
        if not await lot_db.photo_exists():
            await bot.send_message(message.from_user.id, f"<b>–ì–ª–∞–≤–Ω—ã–π –ø—Ä–∏–∑ —Ä–æ–∑—ã–≥—Ä—ã—à–∞: {lottery[3]}üî•</b>\n\n<b>–û–ø–∏—Å–∞–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞üìù</b>\n{lottery[4]}\n\n<b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {datetime.strftime(lottery[7], '%d.%m.%Y –≤ %H:%M')}</b>",
            reply_markup=play_board)
        else:
            await bot.send_photo(message.from_user.id, lottery[8], f"<b>–ì–ª–∞–≤–Ω—ã–π –ø—Ä–∏–∑ —Ä–æ–∑—ã–≥—Ä—ã—à–∞: {lottery[3]}üî•</b>\n\n<b>–û–ø–∏—Å–∞–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞üìù</b>\n{lottery[4]}\n\n<b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ {datetime.strftime(lottery[7], '%d.%m.%Y –≤ %H:%M')}</b>\n\n–ù–∞—à —Ä–æ–±–æ—Ç –≤—ã–±–µ—Ä–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è —Å –ø–æ–º–æ—â—å—é —Ä–∞–Ω–¥–æ–º–∞. –ü—Ä–æ–≤–µ—Ä–∏—Ç –ø–æ–¥–ø–∏—Å–∫—É –∏ —Å—Ä–∞–∑—É –∂–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º.\n\n–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É <b>–Ø –≤ –¥–µ–ª–µüëá </b>",
            reply_markup=play_board)
            scheduler.add_job(remind_push_button, "date", run_date=(datetime.now() + timedelta(minutes=5)), args=(message.from_user.id,))


async def remind_push_button(user_id):
    if await db.button_status(user_id) is not True:
        return await bot.send_message(user_id, "<b>–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª</b>\n\n–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ —Ç—ã –ø–æ–¥–ø–∏—à–µ—à—å—Å—è - –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É <b>üîé–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É</b>\n\nüîé–†–æ–±–æ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç –ø–æ–¥–ø–∏—Å–∫—É –∏ –≤—ã–¥–∞—Å—Ç –ª–æ—Ç–µ—Ä–µ–π–Ω—ã–π –±–∏–ª–µ—Ç.",
        reply_markup=Subscription_Menu_2)